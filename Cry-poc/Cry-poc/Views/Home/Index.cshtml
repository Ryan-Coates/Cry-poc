@model Crypoc.Models.StoreModel;

@{
    ViewData["Title"] = "Home Page";
}

<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>


<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .slim-col {
        padding: 5px;
    }

    .content-box {
        border: 1px solid black;
        padding: 2px;
    }

    .input-group-addon {
        background-color: white;
        padding-bottom: 4px;
    }

    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<div class="container">
    <div class="row">
        <div class="slim-col col-lg-2">
            <div>
                <nav class="navbar navbar-dark grey mb-4" style="margin:0px;padding:0px;">

                    <nav class="navbar navbar-inverse" style="margin:0px;padding:0px;">
                        <div class="container">
                            <div class="navbar-header">
                                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                                    <span class="sr-only">Toggle navigation</span>
                                    <span class="icon-bar"></span>
                                    <span class="icon-bar"></span>
                                    <span class="icon-bar"></span>
                                </button>
                                <a asp-area="" asp-controller="Home" asp-action="Index" class="navbar-brand"><span class="glyphicon glyphicon-th-list"></span></a>
                            </div>
                            <div class="navbar-collapse collapse">
                                <ul class="nav navbar-nav">
                                    <li><a asp-area="" asp-controller="Home" asp-action="Index">Menu</a></li>
                                </ul>
                            </div>
                        </div>
                    </nav>

                </nav>
            </div>
            <br />
            <div class="content-box">


                <label>Refine your taste</label>
                <br />
                @Html.DropDownListFor(x => x.Currencies, "Currencies");
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Currencies
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="#">BitCoin</a>
                        <a class="dropdown-item" href="#">Etherium</a>
                        <a class="dropdown-item" href="#">Ripple</a>
                    </div>
                </div>
                <br />
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Cuisine
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="#">Chinese</a>
                        <a class="dropdown-item" href="#">Italian</a>
                        <a class="dropdown-item" href="#">American</a>
                    </div>
                </div>
                <br />
                <h6>Distance</h6>
                <input type="range" min="1" max="100" value="50">
                <br />
                @using (Html.BeginForm("Index", "Home", FormMethod.Post))
                {

                    <div class="input-group stylish-input-group">
                        @Html.TextBoxFor(m => m.SearchString, new { @class = "form-control" })
                        <span class="input-group-addon">
                            <button type="submit">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </span>
                    </div>
                }
            </div>
            <br />
            <div class="content-box">
                <label>Promotions near you</label>
                @foreach (var p in Model.Promotions)
                {
                    <p>@p.PlaceName  : @p.Description</p>
                    <hr />
                }
            </div>
        </div>
        <div class="slim-col col-lg-8"><div id="map_canvas" style="height: 900px;"></div></div>
        <div class="slim-col col-lg-2">
            <div class="content-box">
                @foreach (var mp in Model.Stores)
                {
                    <hr />
                    <p>
                        @mp.PlaceName @mp.Rating
                    </p>
                    <p>
                        Distance: @mp.Distance
                    </p>
                    <p>
                        @mp.Offer
                    </p>
                    <a class="glyphicon glyphicon-chevron-right" style="position: relative;    right: -150px;    top: -90px;"></a>
                }
            </div>
            <br />
            <div class="content-box">
                <label>Show recomendations</label>
                @foreach (var r in Model.Recomendations)
                {
                    <p>@r.PlaceName  : @r.Description</p>
                    <hr />
                }
            </div>
        </div>
    </div>
</div>

<br />

<!-- This is the div that will contain the Google Map -->
<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">


    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
            var uk = new google.maps.LatLng(54.915932, -1.494106);
            // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 10,
            center: uk,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        var data = @Html.Raw(Model.MapPointsJSON);

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName
            });

            // Make the marker-pin blue!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

        })
    }


        </script>
    </section>
}
